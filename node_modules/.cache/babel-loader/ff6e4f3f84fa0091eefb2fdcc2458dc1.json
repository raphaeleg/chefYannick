{"ast":null,"code":"var _jsxFileName = \"/Users/crushedsummers/Desktop/Work/DadResume/chefYannick/src/pages/Health.js\";\n\n/** @format */\nimport React from 'react';\nimport '../App.css';\nimport { HealthFluff, HealthListV2, Recipes } from '../TextInfo';\nimport HealthBlock from '../components/HealthBlock';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Health = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container_pages\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filler-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title_exp\",\n          children: \"You are what you eat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"healthDesc\",\n          children: HealthFluff\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"hth_li supplier\",\n          children: HealthListV2.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"healthCard\",\n              children: /*#__PURE__*/_jsxDEV(HealthBlock, {\n                itemi: item\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 37\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 33\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filler-text\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"title_exp\",\n          children: \"A weekly menu of tasty and healthy diet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"[with Recipes]\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"healthDesc\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipeGrid\",\n        children: Recipes.map((item, index) => {\n          let date = null;\n          index < 5 ? date = /*#__PURE__*/_jsxDEV(\"p\", {\n            children: item.day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 46\n          }, this) : date = null;\n          return /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"recipeBlock\",\n            children: [date, /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"annotateP\",\n              children: item.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"recipeDish\",\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Health;\nexport default Health;\n\nvar _c;\n\n$RefreshReg$(_c, \"Health\");","map":{"version":3,"sources":["/Users/crushedsummers/Desktop/Work/DadResume/chefYannick/src/pages/Health.js"],"names":["React","HealthFluff","HealthListV2","Recipes","HealthBlock","Health","map","item","index","date","day","type","name"],"mappings":";;AAAA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,OAApC,QAAmD,aAAnD;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AACjB,sBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAG,UAAA,SAAS,EAAC,YAAb;AAAA,oBAA2BJ;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAA,+BACI;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAA,oBACKC,YAAY,CAACI,GAAb,CAAkB,CAAEC,IAAF,EAAQC,KAAR,KAAmB;AAClC,gCACI;AAAkB,cAAA,SAAS,EAAC,YAA5B;AAAA,qCACI,QAAC,WAAD;AAAa,gBAAA,KAAK,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ,eAAWC,KAAX;AAAA;AAAA;AAAA;AAAA,oBADJ;AAKH,WANA;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ,eAgBI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAG,UAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ,eAqBI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBACKL,OAAO,CAACG,GAAR,CAAa,CAAEC,IAAF,EAAQC,KAAR,KAAmB;AAC7B,cAAIC,IAAI,GAAG,IAAX;AACED,UAAAA,KAAK,GAAG,CAAR,GAAYC,IAAI,gBAAG;AAAA,sBAAIF,IAAI,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,kBAAnB,GAAuCD,IAAI,GAAG,IAAhD;AACA,8BACI;AAAkB,YAAA,SAAS,EAAC,aAA5B;AAAA,uBACKA,IADL,eAEI;AAAG,cAAA,SAAS,EAAC,WAAb;AAAA,wBAA0BF,IAAI,CAACI;AAA/B;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAG,cAAA,SAAS,EAAC,YAAb;AAAA,wBAA2BJ,IAAI,CAACK;AAAhC;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA,aAAWJ,KAAX;AAAA;AAAA;AAAA;AAAA,kBADJ;AAOH,SAVA;AADL;AAAA;AAAA;AAAA;AAAA,cArBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAuCH,CAxCD;;KAAMH,M;AA0CN,eAAeA,MAAf","sourcesContent":["/** @format */\n\nimport React from 'react';\nimport '../App.css';\nimport { HealthFluff, HealthListV2, Recipes } from '../TextInfo';\nimport HealthBlock from '../components/HealthBlock';\n\nconst Health = () => {\n    return (\n        <div className='container_pages'>\n            <span>\n                <div className='filler-text'>\n                    <h1 className='title_exp'>You are what you eat</h1>\n                    <p className='healthDesc'>{HealthFluff}</p>\n                </div>\n                <div>\n                    <span className='hth_li supplier'>\n                        {HealthListV2.map( ( item, index ) => {\n                            return (\n                                <span key={index} className=\"healthCard\">\n                                    <HealthBlock itemi={item} />\n                                </span>\n                            );\n                        } )}\n                    </span>\n                </div>\n                <div className='filler-text'>\n                    <h1 className='title_exp'>A weekly menu of tasty and healthy diet</h1>\n                    <h1>[with Recipes]</h1>\n                    <p className='healthDesc'></p>\n                </div>\n                <div className=\"recipeGrid\">\n                    {Recipes.map( ( item, index ) => {\n                        let date = null;\n                        ( index < 5 ? date = <p>{item.day}</p> : date = null )\n                        return (\n                            <span key={index} className=\"recipeBlock\">\n                                {date}\n                                <p className=\"annotateP\">{item.type}</p>\n                                <p className=\"recipeDish\">{item.name}</p>\n                            </span>\n                        );\n                    } )}\n                </div>\n            </span>\n        </div>\n    );\n};\n\nexport default Health;"]},"metadata":{},"sourceType":"module"}